{"version":3,"sources":["redux/reducers/triviaReducer.js","redux/reducers/userReducer.js","redux/reducers/rootReducer.js","redux/actions/types.js","redux/store.js","components/CategorySelect.js","redux/actions/triviaActions.js","components/Result.js","components/Answers.js","components/Question.js","redux/actions/userActions.js","components/Trivia.js","components/Score.js","components/Header.js","App.js","index.js"],"names":["initialState","categories","questions","score","combineReducers","trivia","state","arguments","length","undefined","_ref","type","payload","Object","objectSpread","arr","toConsumableArray","shift","user","parseInt","localStorage","getItem","isNaN","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","CategorySelect","dispatch","useDispatch","useSelector","useEffect","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","status","data","trivia_categories","stop","_x","this","react_default","createElement","className","Fragment","map","category","dist","href","concat","id","key","name","react_loader_spinner_default","color","height","width","Result","props","selectedAnswer","correctAnswer","correct","opacityRef","useRef","opacitySpring","useSpring","from","opacity","to","config","duration","ref","colorRef","colorSpring","backgroundColor","correctRef","correctSpring","useChain","web","div","style","padding","dangerouslySetInnerHTML","__html","Answers","answers","selectAnswer","scaleSpring","transform","slow","answer","onClick","data-answer","Question","_useState","useState","_useState2","slicedToArray","answered","setAnswered","_useState3","_useState4","setSelected","_props$question","question","correct_answer","components_Result","components_Answers","e","target","dataset","nextQuestion","visibility","Trivia","_ref2","_callee2","_context2","results","_x2","getQuestions","components_Question","shuffle","incorrect_answers","Score","window","onunload","setItem","Header","components_Score","routes","/","components_CategorySelect","/:id","components_Trivia","App","routeResult","useRoutes","es","components_Header","setBasepath","process","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b4cc9551.chunk.js","sourcesContent":["import {\r\n  GET_CATEGORIES,\r\n  GET_QUESTIONS,\r\n  REMOVE_QUESTION,\r\n  CLEAR_QUESTIONS\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  categories: [],\r\n  questions: []\r\n};\r\nexport default function(state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case GET_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: payload\r\n      };\r\n    case REMOVE_QUESTION:\r\n      let arr = [...state.questions];\r\n      arr.shift();\r\n      return {\r\n        ...state,\r\n        questions: arr\r\n      };\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        questions: payload\r\n      };\r\n    case CLEAR_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        questions: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_SCORE, ADD_SCORE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  score: 0\r\n};\r\n\r\nexport default function(state = initialState, { type }) {\r\n  switch (type) {\r\n    case GET_SCORE:\r\n      const score = parseInt(localStorage.getItem(\"score\"));\r\n      return {\r\n        ...state,\r\n        score: isNaN(score) ? 0 : score\r\n      };\r\n    case ADD_SCORE:\r\n      return {\r\n        ...state,\r\n        score: state.score + 1\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport triviaReducer from \"./triviaReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nexport default combineReducers({\r\n  trivia: triviaReducer,\r\n  user: userReducer\r\n});\r\n","// trivia action types\r\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\r\nexport const GET_QUESTIONS = \"GET_QUESTIONS\";\r\nexport const REMOVE_QUESTION = \"REMOVE_QUESTION\";\r\nexport const CLEAR_QUESTIONS = \"CLEAR_QUESTIONS\";\r\n\r\n// user action types\r\nexport const GET_SCORE = \"GET_SCORE\";\r\nexport const ADD_SCORE = \"ADD_SCORE\";\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getCategories } from \"../redux/actions/triviaActions\";\r\nimport { A } from \"hookrouter\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst CategorySelect = () => {\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector(state => state.trivia.categories);\r\n  useEffect(() => {\r\n    if (categories.length === 0) {\r\n      dispatch(getCategories());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"category-select\">\r\n      {categories.length > 0 ? (\r\n        <React.Fragment>\r\n          <div className=\"categories\">\r\n            {categories.map(category => (\r\n              <A\r\n                href={`/trivia/${category.id}`}\r\n                className=\"category hover\"\r\n                key={category.id}\r\n              >\r\n                {category.name}\r\n              </A>\r\n            ))}\r\n          </div>\r\n        </React.Fragment>\r\n      ) : (\r\n        <Loader\r\n          className=\"container categories-loader\"\r\n          type=\"TailSpin\"\r\n          color=\"whitesmoke\"\r\n          height={100}\r\n          width={100}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategorySelect;\r\n","import {\r\n  GET_CATEGORIES,\r\n  GET_QUESTIONS,\r\n  REMOVE_QUESTION,\r\n  CLEAR_QUESTIONS\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getCategories = () => async dispatch => {\r\n  const res = await axios.get(\"https://opentdb.com/api_category.php\");\r\n  if (res.status === 200) {\r\n    dispatch({\r\n      type: GET_CATEGORIES,\r\n      payload: res.data.trivia_categories\r\n    });\r\n  }\r\n};\r\n\r\nexport const getQuestions = id => async dispatch => {\r\n  const res = await axios.get(\r\n    `https://opentdb.com/api.php?amount=10&category=${id}`\r\n  );\r\n  if (res.status === 200) {\r\n    dispatch({\r\n      type: GET_QUESTIONS,\r\n      payload: res.data.results\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeQuestion = () => dispatch => {\r\n  dispatch({\r\n    type: REMOVE_QUESTION\r\n  });\r\n};\r\n\r\nexport const clearQuestions = () => dispatch => {\r\n  dispatch({\r\n    type: CLEAR_QUESTIONS\r\n  });\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { useSpring, useChain, animated } from \"react-spring\";\r\n\r\nconst Result = props => {\r\n  const { selectedAnswer, correctAnswer, correct } = props;\r\n\r\n  const opacityRef = useRef();\r\n  const opacitySpring = useSpring({\r\n    from: { opacity: 0.1 },\r\n    to: { opacity: 1 },\r\n    config: {\r\n      duration: 200\r\n    },\r\n    ref: opacityRef\r\n  });\r\n  const colorRef = useRef();\r\n  const colorSpring = useSpring({\r\n    from: {\r\n      backgroundColor: \"#F5F5F5\"\r\n    },\r\n    to: {\r\n      backgroundColor: correct ? \"#98FB98\" : \"rgba(255,0,0,.7)\"\r\n    },\r\n    config: {\r\n      duration: 800\r\n    },\r\n    ref: colorRef\r\n  });\r\n  const correctRef = useRef();\r\n  const correctSpring = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n    config: { duration: 1200 },\r\n    ref: correctRef\r\n  });\r\n  useChain([opacityRef, colorRef, correctRef], [0, 0.4, 0.4]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <animated.div style={opacitySpring} className=\"result\">\r\n        <animated.div style={colorSpring}>\r\n          <p\r\n            style={{ padding: \"1rem\" }}\r\n            dangerouslySetInnerHTML={{ __html: selectedAnswer }}\r\n          />\r\n        </animated.div>\r\n      </animated.div>\r\n      <animated.div style={correctSpring} className=\"correct-answer\">\r\n        {!correct ? (\r\n          <p>\r\n            Correct answer:\r\n            <span dangerouslySetInnerHTML={{ __html: correctAnswer }} />\r\n          </p>\r\n        ) : null}\r\n      </animated.div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\nimport { useSpring, animated, config } from \"react-spring\";\r\n\r\nconst Answers = props => {\r\n  const { answers, selectAnswer } = props;\r\n\r\n  const scaleSpring = useSpring({\r\n    from: {\r\n      transform: \"scale(0.1)\",\r\n      opacity: 1\r\n    },\r\n    to: {\r\n      transform: \"scale(1)\",\r\n      opacity: 1\r\n    },\r\n    config: config.slow\r\n  });\r\n  return (\r\n    <animated.div className=\"answers\" style={scaleSpring}>\r\n      {answers.map(answer => (\r\n        <div\r\n          className=\"answer-btn hover\"\r\n          onClick={selectAnswer}\r\n          data-answer={answer}\r\n          id={answer}\r\n          key={answer}\r\n          dangerouslySetInnerHTML={{ __html: answer }}\r\n        />\r\n      ))}\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default Answers;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addScore } from \"../redux/actions/userActions\";\r\nimport Result from \"./Result\";\r\nimport Answers from \"./Answers\";\r\n\r\nconst Question = props => {\r\n  const [answered, setAnswered] = useState(false);\r\n  const [selectedAnswer, setSelected] = useState(\"\");\r\n\r\n  const { question, correct_answer } = props.question;\r\n  const dispatch = useDispatch();\r\n\r\n  const selectAnswer = e => {\r\n    const selectedAnswer = e.target.dataset.answer;\r\n    setSelected(selectedAnswer);\r\n    setAnswered(true);\r\n  };\r\n  const nextQuestion = () => {\r\n    if (selectedAnswer === correct_answer) {\r\n      dispatch(addScore());\r\n    }\r\n    setAnswered(false);\r\n    props.nextQuestion();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h3 dangerouslySetInnerHTML={{ __html: question }} />\r\n      {!answered ? (\r\n        <Answers answers={props.answers} selectAnswer={selectAnswer} />\r\n      ) : (\r\n        <Result\r\n          selectedAnswer={selectedAnswer}\r\n          correct={selectedAnswer === correct_answer}\r\n          correctAnswer={correct_answer}\r\n        />\r\n      )}\r\n      <button\r\n        onClick={nextQuestion}\r\n        className=\"next-btn\"\r\n        style={{ visibility: answered ? \"visible\" : \"hidden\" }}\r\n      >\r\n        Next Question\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import { GET_SCORE, ADD_SCORE } from \"./types\";\r\n\r\nexport const getScore = () => dispatch => {\r\n  dispatch({\r\n    type: GET_SCORE\r\n  });\r\n};\r\nexport const addScore = () => dispatch => {\r\n  dispatch({\r\n    type: ADD_SCORE\r\n  });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  removeQuestion,\r\n  getQuestions,\r\n  clearQuestions\r\n} from \"../redux/actions/triviaActions\";\r\nimport Question from \"./Question\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { shuffle } from \"lodash\";\r\n\r\nconst Trivia = ({ id }) => {\r\n  const questions = useSelector(state => state.trivia.questions);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (questions.length < 1) {\r\n      dispatch(getQuestions(id));\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearQuestions());\r\n    };\r\n  }, []);\r\n  const nextQuestion = () => {\r\n    dispatch(removeQuestion());\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"question\">\r\n        {questions.length > 0 ? (\r\n          <Question\r\n            question={questions[0]}\r\n            nextQuestion={nextQuestion}\r\n            answers={shuffle([\r\n              questions[0].correct_answer,\r\n              ...questions[0].incorrect_answers\r\n            ])}\r\n          />\r\n        ) : (\r\n          <div className=\"loader\">\r\n            <Loader type=\"TailSpin\" color=\"#c4c4c4\" height={100} width={100} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Trivia;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getScore } from \"../redux/actions/userActions\";\r\n\r\nconst Score = () => {\r\n  const score = useSelector(state => state.user.score);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getScore());\r\n  }, []);\r\n\r\n  window.onunload = () => {\r\n    localStorage.setItem(\"score\", score);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"score\">\r\n        <p>Score:</p> <h4>{score}</h4>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Score;\r\n","import React from \"react\";\r\nimport Score from \"./Score\";\r\nimport { A } from \"hookrouter\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <A href=\"/\">Trivia</A>\r\n      <Score />\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { useRoutes } from \"hookrouter\";\nimport CategorySelect from \"./components/CategorySelect\";\nimport Trivia from \"./components/Trivia\";\nimport Header from \"./components/Header\";\nimport \"./css/main.css\";\n\nconst routes = {\n  \"/\": () => <CategorySelect />,\n  \"/:id\": ({ id }) => <Trivia id={id} />\n};\nfunction App() {\n  const routeResult = useRoutes(routes);\n  return (\n    <Provider store={store}>\n      <Header />\n      {routeResult}\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { setBasepath } from \"hookrouter\";\n\nsetBasepath(process.env.PUBLIC_URL);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}